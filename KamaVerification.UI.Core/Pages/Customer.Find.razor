@page "/customer/find"
@using KamaVerification.UI.Core.Models;
@using KamaVerification.UI.Core.Services;
@inject ICustomerRepository _repo;

<PageTitle>Customer | Find</PageTitle>

<h4><b>Find Customer by name</b></h4>

<Form Model="@customerFind">
    <Text Label="Name" @bind-Value="customerFind.Name" HelpText="@($"The customer's name to look for is {customerFind.Name}")"></Text>

    <Button Id="find-button" State="findButtonState" Outline="true" @onclick="HandleFindCustomerAsync" Disabled="findButtonDisabled">Find</Button>
</Form>

<Datagrid TRowData="Customer" Items="customers">
    <DatagridColumn Title="Id" TRowData="Customer" Field="c => c.CustomerId" CanSort="true" />
    <DatagridColumn Title="Name" TRowData="Customer" Field="c => c.Name" CanSort="true" />
    <DatagridColumn TRowData="Customer" Title="Creation Date">@context.CreatedAt.ToShortDateString()</DatagridColumn>
</Datagrid>

@code {
    private CustomerFind customerFind = new();
    private List<Customer> customers = new List<Customer>();
    private LoadingState findButtonState = LoadingState.Default;
    private bool findButtonDisabled => !IsFindButtonEnabled();

    public async Task HandleFindCustomerAsync()
    {
        findButtonState = LoadingState.Loading;
        var customer = await _repo.FindAsync(customerFind.Name);
        customers.Add(customer);
        findButtonState = LoadingState.Default;
    }

    public bool IsFindButtonEnabled()
    {
        return !string.IsNullOrWhiteSpace(customerFind.Name);
    }
}
