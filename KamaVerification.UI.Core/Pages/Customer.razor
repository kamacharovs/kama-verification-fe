@page "/customer"
@using KamaVerification.UI.Core.Models;
@using KamaVerification.UI.Core.Services;
@inject ICustomerRepository _repo;

<PageTitle>Customer</PageTitle>

<h4><b>Create Customer</b></h4>

<Alert Type="AlertType.Success" Hidden="hideAlert" OnClose="OnCloseAlert">
    <AlertItem>
        <AlertText>Successfully added Customer</AlertText>
    </AlertItem>
</Alert>

<Form Model="@customerDto" Layout="FormLayout.Horizontal">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <Text Label="Name" @bind-Value="customerDto.Name" HelpText="@($"Required. The name will be {customerDto.Name}")" />  
    <Select Label="Generate API Key" @bind-Value="customerDto.GenerateApiKeyStr" Items="generateApiKeyOptions" HelpText="@("Required")" />

    <h5>Email (Optional)</h5>
    <Text Label="Subject" @bind-Value="customerDto.EmailConfig.Subject" HelpText="Optional"></Text>
    <Text Label="From Email" @bind-Value="customerDto.EmailConfig.FromEmail" HelpText="Optional"></Text>
    <Text Label="From Name" @bind-Value="customerDto.EmailConfig.FromName" HelpText="Optional"></Text>
    <Text Label="Expiration (in minutes)" @bind-Value="customerDto.EmailConfig.ExpirationInMinutesStr" HelpText="Optional"></Text>

    <Button id="create-btn" State="createBtnState" Outline="true" @onclick="HandleCreateCustomerAsync" Disabled="createBtnDisabled">Create</Button>
</Form>

@code {
    private CustomerDto customerDto = new();

    private string[] generateApiKeyOptions = new string[] { "Yes", "No" };

    private bool createBtnDisabled => !IsCreateButtonEnabled();
    private LoadingState createBtnState = LoadingState.Default;
    private bool hideAlert = true;

    public async Task HandleCreateCustomerAsync()
    {
        hideAlert = true;
        createBtnState = LoadingState.Loading;

        var res = await _repo.CreateAsync(customerDto);

        createBtnState = LoadingState.Default;
        hideAlert = false;
    }

    public bool IsCreateButtonEnabled()
    {
        return !string.IsNullOrWhiteSpace(customerDto.Name);
    }

    public void OnCloseAlert()
    {
        hideAlert = true;
    }
}
